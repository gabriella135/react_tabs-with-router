{"version":3,"sources":["components/Navigation.tsx","pages/HomePage.tsx","pages/PageNotFound.tsx","pages/TabsPage.tsx","App.tsx","index.tsx"],"names":["Navigation","className","to","isActive","classNames","HomePage","PageNotFound","TabsPage","tabs","useParams","tabId","selectedTab","find","tab","id","useState","isSelectedTab","setIsSelectedTab","map","title","onClick","content","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gPAGaA,EAAa,kBACxB,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cACtC,CACE,YAAaD,KAJnB,kBAUA,cAAC,IAAD,CACED,GAAG,QACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cACtC,CACE,YAAaD,KAJnB,0BCpBKE,EAAW,kBACtB,oBAAIJ,UAAU,QAAd,wBCDWK,EAAe,kBAC1B,oBAAIL,UAAU,QAAd,6B,cCQWM,EAAsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpC,EAAsBC,cAAdC,aAAR,MAAgB,EAAhB,EACMC,EAAcH,EAAKI,MAAK,SAACC,GAAD,OAASH,IAAUG,EAAIC,MACrD,EAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEA,OACE,qCACE,oBAAIhB,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGO,EAAKU,KAAI,SAAAL,GACR,IAAQC,EAAcD,EAAdC,GAAIK,EAAUN,EAAVM,MAEZ,OACE,oBACE,UAAQ,MACRlB,UAAWG,IAAW,CAAE,YAAaM,IAAUI,IAFjD,SAKE,cAAC,IAAD,CACEZ,GAAE,gBAAWY,GACbM,QAAS,kBAAMH,GAAiB,IAFlC,SAIGE,KANEL,UAcf,qBAAKb,UAAU,QAAQ,UAAQ,aAA/B,SACGe,EACG,sBADU,OAEVL,QAFU,IAEVA,OAFU,EAEVA,EAAaU,cCnCnBb,EAAO,CACX,CAAEM,GAAI,QAASK,MAAO,QAASE,QAAS,eACxC,CAAEP,GAAI,QAASK,MAAO,QAASE,QAAS,eACxC,CAAEP,GAAI,QAASK,MAAO,QAASE,QAAS,gBAG7BC,EAAM,kBACjB,qCAEE,cAAC,EAAD,IAEA,qBAAKrB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUtB,GAAG,IAAIuB,SAAO,MACpD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,cAAC,EAAD,MAEzB,eAAC,IAAD,CAAOD,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,CAAUhB,KAAMA,MACtC,cAAC,IAAD,CAAOe,KAAK,SAASC,QAAS,cAAC,EAAD,CAAUhB,KAAMA,oBCzB1DmB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8c1ec997.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => classNames('navbar-item',\n            {\n              'is-active': isActive,\n            })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/tabs\"\n          className={({ isActive }) => classNames('navbar-item',\n            {\n              'is-active': isActive,\n            })}\n        >\n          Tabs\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { FC, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n};\n\nexport const TabsPage: FC<Props> = ({ tabs }) => {\n  const { tabId = 0 } = useParams();\n  const selectedTab = tabs.find((tab) => tabId === tab.id);\n  const [isSelectedTab, setIsSelectedTab] = useState(true);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                data-cy=\"Tab\"\n                className={classNames({ 'is-active': tabId === id })}\n                key={id}\n              >\n                <Link\n                  to={`/tabs/${id}`}\n                  onClick={() => setIsSelectedTab(false)}\n                >\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {isSelectedTab\n          ? 'Please select a tab'\n          : selectedTab?.content}\n      </div>\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './pages/HomePage';\nimport { PageNotFound } from './pages/PageNotFound';\nimport { TabsPage } from './pages/TabsPage';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <Navigation />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n\n          <Route path=\"tabs\">\n            <Route index element={<TabsPage tabs={tabs} />} />\n            <Route path=\":tabId\" element={<TabsPage tabs={tabs} />} />\n          </Route>\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}